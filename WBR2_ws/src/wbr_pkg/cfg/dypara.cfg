#! /usr/bin/env python
"""
 4生成动态参数 int,double,bool,string,列表
 5实现流程:
 6    1.导包
 7    2.创建生成器
 8    3.向生成器添加若干参数
 9    4.生成中间文件并退出
10
"""
# 1.导包
from dynamic_reconfigure.parameter_generator_catkin import *
PACKAGE = "wbr_pkg"
# 2.创建生成器
gen = ParameterGenerator()

# 3.向生成器添加若干参数
#add(name, paramtype, level, description, default=None, min=None, max=None, edit_method="")

State_K = [-1	,-98.755	,-2.4235	,-16.483]
#add(name, paramtype, level, description, default=None, min=None, max=None, edit_method="")
gen.add("pos_kp",double_t,0,"pos_kp",9,0,50)
gen.add("pos_ki",double_t,0,"pos_kp",0,0,100)
gen.add("pos_kd",double_t,0,"pos_kp",10,0,50)

gen.add("k1",double_t,0,"k1",State_K[0],-300,300)
gen.add("k2",double_t,0,"k2",State_K[1],-300,300)
gen.add("k3",double_t,0,"k3",State_K[2],-300,300)
gen.add("k4",double_t,0,"k4",State_K[3],-300,300)


# gen.add("string_param",str_t,0,"str pa","hello world ")

gen.add("pid_ctrl",bool_t,0,"bool pa ",True)
gen.add("lqr_k_right",bool_t,0,"bool pa ",False)
# many_enum = gen.enum([gen.const("small",int_t,0,"a small size"),
#                 gen.const("mediun",int_t,1,"a medium size"),
#                 gen.const("big",int_t,2,"a big size")
#                 ],"a car size set")

# gen.add("list_param",int_t,0,"zz list",0,0,2, edit_method=many_enum)

# 4.生成中间文件并退出
exit(gen.generate(PACKAGE,"robotwbr","robotwbr"))

